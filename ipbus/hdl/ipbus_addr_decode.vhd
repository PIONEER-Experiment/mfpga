-- Address decode logic for ipbus fabric
--
-- This file has been AUTOGENERATED from the address table - do not hand edit
--
-- We assume the synthesis tool is clever enough to recognise exclusive conditions
-- in the if statement.
--
-- Dave Newbold, February 2011

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use ieee.numeric_std.all;
use work.ipbus.all;

package ipbus_addr_decode is

  function ipbus_addr_sel(signal addr : in std_logic_vector(31 downto 0)) return integer;

end ipbus_addr_decode;

package body ipbus_addr_decode is

  function ipbus_addr_sel(signal addr : in std_logic_vector(31 downto 0)) return integer is
    variable sel : integer;
  begin
		if    std_match(addr, "------------------00----------0-") then
			sel := 0; -- ctrl_reg / base 00000000 / mask 00000001
		elsif std_match(addr, "------------------00----------1-") then
			sel := 1; -- reg / base 00000002 / mask 00000000
		elsif std_match(addr, "------------------01------------") then
			sel := 2; -- ram / base 00001000 / mask 00000fff
		elsif std_match(addr, "------------------10----------0-") then
			sel := 3; -- peep_ram / base 00002000 / mask 00000001
		else
			sel := 99;
		end if;
		return sel;
	end ipbus_addr_sel;
 
end ipbus_addr_decode;
